apply plugin: 'com.android.library'

android {
    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
        testApplicationId "com.example.test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            all {
                testLogging {
                    exceptionFormat = "full"
                    events "PASSED", "FAILED", "SKIPPED"
                }
                forkEvery 1
            }
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation 'androidx.test.ext:junit:1.1.5'
    implementation 'com.appsflyer:af-android-sdk:6.10.3'
    compileOnly 'com.android.installreferrer:installreferrer:2.1'
    compileOnly 'com.segment.analytics.android:analytics:4.+'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.9.2'
    testImplementation 'com.android.installreferrer:installreferrer:2.1'
    testImplementation 'com.segment.analytics.android:analytics:4.+'
    testImplementation 'org.mockito:mockito-core:4.2.0'
    testImplementation 'com.segment.analytics.android:analytics-tests:4.+'
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

apply from:file("publish.gradle")
